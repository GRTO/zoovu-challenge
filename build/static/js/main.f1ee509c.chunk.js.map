{"version":3,"sources":["assets/images/regular_clock.svg","assets/images/zoovu-z.svg","assets/images/zoovu-o.svg","assets/images/zoovu-v.svg","assets/images/zoovu-u.svg","assets/images/image_opacity.png","assets/images/arrow-right.svg","assets/images/background.jpg","styles/theme.ts","store/game.store.ts","utils/random.ts","store/index.ts","store/user.store.ts","app/components/Icon/Icon.tsx","hooks/useTimer.ts","app/views/game/Header/Header.tsx","app/views/game/Header/Header.theme.ts","utils/cards.ts","app/components/CardGame/CardGame.tsx","app/components/CardGame/CardGame.theme.ts","app/views/game/PickupArea/PickupArea.tsx","app/views/game/PickupArea/PickupArea.theme.ts","app/views/game/DroppableArea/DroppableArea.tsx","app/views/game/DroppableArea/DroppableArea.theme.ts","utils/dragdrop.ts","app/views/game/Game.tsx","app/components/Button/Button.tsx","app/components/Button/Button.theme.ts","app/components/Input/Input.tsx","app/components/Input/Input.theme.ts","app/views/welcome/Welcome.tsx","app/views/welcome/Welcome.theme.ts","app/routes/Routes.tsx","app/components/Layout/Layout.theme.ts","app/components/Layout/Layout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","theme","colors","primary","black","purple","green","secondary","white","GameStore","array","this","sourceItems","sourceItemsChanged","JSON","stringify","destinationItems","destinationItemsChanged","isGameCompleted","isCompleted","length","map","destionation","index","expectedResult","every","value","destinationIndex","sourceIndex","newDestinationItems","sourceValue","splice","itemReplaced","newSourceItems","setDestinationItems","setSourceItems","sourceInde","firstValue","addMistake","isGameStarted","countMistakes","j","x","i","arrayTemp","Math","floor","random","shuffle","observable","action","store","User","name","userLogged","userName","Gamer","StoreContext","React","createContext","useStoreContext","useContext","Icon","display","backgroundPosition","backgroundRepeat","backgroundSize","fontFamily","verticalAlign","props","backgroundImage","src","size","css","height","width","useTimer","useState","seconds","status","secondsTimer","setSecondsTimer","timer","setTimer","useEffect","initializeTimer","setInterval","prevState","pauseTimer","clearInterval","stopTimer","addToTimer","startTimer","resetTimer","Header","observer","headerStyles","useTheme","headerContainer","nameContainer","timerContainer","gameStatus","iconStyle","headerRight","HeaderStyles","nameString","console","log","setTimeout","resetGame","RegularClockSVG","getValueCard","draggableAreaEmpty","CardGame","letterIcon","keyCard","LetterZSVG","LetterOSVG","LetterVSVG","LetterUSVG","getCardIcon","cardGameStyles","cardGameContainer","emptyCardGameContainer","CardGameStyles","id","PickupArea","pickupAreaStyles","pickAreaContainer","pickupLabel","itemContainer","noItems","ImageZoovuPNG","PickupAreaStyles","droppableId","isDropDisabled","provided","ref","innerRef","key","draggableId","draggableProps","dragHandleProps","DroppableArea","droppableAreaStyles","droppableAreaContainer","droppableLabel","DroppableAreaStyles","destination","setDestination","isDragDisabled","getComponentId","term","text","pattern","RegExp","split","itemId","Game","withRouter","verifyGame","onDragStart","initGame","onDragEnd","result","source","droppableIdNumber","destinationIdNumber","sourceIdNumber","includes","isMoveFromDroppable","matchedItems","changeDroppableItem","Button","onClick","children","buttonStyles","ButtonContainer","ButtonStyles","Input","placeholder","onChange","inputStyles","inputContainer","inputWrapper","InputStyles","maxLength","ContentButtonGo","buttonGameStyles","containerButton","contentButton","ButtonGameStyles","ArrowRightSVG","Welcome","history","welcomeStyles","welcomeContainer","welcomeTitle","nameValue","setNameValue","e","target","setName","push","pathname","ROUTES_URLS","GAME_PATH","WELCOME_PATH","routes","component","isProtected","path","slug","title","ProtectedRoute","Component","exact","isAuthorized","isUserLogged","render","to","state","message","requestedPath","AppRouter","basename","route","LayoutStyles","layoutContainer","BackgroundJPG","Layout","AppWrapper","App","Provider","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f1ee509c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/regular_clock.2dddf6f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoovu-z.98d275b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoovu-o.987e802d.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoovu-v.f04e5e7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoovu-u.509452d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/image_opacity.6e85432f.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.545dede7.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.facbfb5f.jpg\";","export const theme: ITheme = {\r\n  colors: {\r\n    primary: {\r\n      black: '#303133',\r\n      purple: '#3b0465',\r\n      green: '#00e4a1',\r\n    },\r\n    secondary: {\r\n      'gray-1': '#9ea2b2',\r\n      'gray-2': '#e6e7ed',\r\n      'gray-3': '#f5f6f9',\r\n      white: '#ffffff',\r\n    },\r\n  },\r\n};\r\n","import { observable, action } from 'mobx';\r\nimport { shuffle } from 'utils/random';\r\n\r\nexport class GameStore {\r\n  @observable private expectedResult = [0, 1, 2, 3, 4];\r\n  @observable public sourceItems: number[] = [];\r\n  @observable public destinationItems: number[] = [5, 6, 7, 8, 9];\r\n  @observable public sourceItemsChanged = '';\r\n  @observable public destinationItemsChanged = '';\r\n  @observable public isGameCompleted: boolean = false;\r\n  @observable public isGameStarted: boolean = false;\r\n  @observable public countMistakes: number = 0;\r\n\r\n  @action\r\n  public setSourceItems(array: number[]) {\r\n    this.sourceItems = array;\r\n    this.sourceItemsChanged = JSON.stringify(array);\r\n  }\r\n\r\n  @action\r\n  public setDestinationItems(array: number[]) {\r\n    this.destinationItems = array;\r\n    this.destinationItemsChanged = JSON.stringify(array);\r\n  }\r\n\r\n  @action verifyGame() {\r\n    this.isGameCompleted = this.isCompleted();\r\n  }\r\n\r\n  private isCompleted() {\r\n    return (\r\n      this.destinationItems.length > 0 &&\r\n      this.destinationItems\r\n        .map(\r\n          (destionation, index) =>\r\n            ((destionation === 1 || destionation === 2) && (index === 1 || index === 2)) ||\r\n            destionation === this.expectedResult[index],\r\n        )\r\n        .every(value => value)\r\n    );\r\n  }\r\n\r\n  @action\r\n  public matchedItems(destinationIndex: number, sourceIndex: number) {\r\n    const newDestinationItems = [...this.destinationItems];\r\n    const sourceValue = this.sourceItems[sourceIndex];\r\n\r\n    const [itemReplaced] = newDestinationItems.splice(destinationIndex, 1, sourceValue);\r\n    const newSourceItems = [...this.sourceItems];\r\n    newSourceItems.splice(sourceIndex, 1, itemReplaced);\r\n\r\n    // All Actions\r\n    this.setDestinationItems(newDestinationItems);\r\n    this.setSourceItems(newSourceItems);\r\n  }\r\n\r\n  @action changeDroppableItem(sourceInde: number, destinationIndex: number) {\r\n    const newDestinationItems = [...this.destinationItems];\r\n    const firstValue = this.destinationItems[sourceInde];\r\n    const [itemReplaced] = newDestinationItems.splice(destinationIndex, 1, firstValue);\r\n    newDestinationItems.splice(sourceInde, 1, itemReplaced);\r\n\r\n    this.setDestinationItems(newDestinationItems);\r\n\r\n    // Verify movement is correct or not\r\n    if (firstValue !== destinationIndex) {\r\n      this.addMistake();\r\n    }\r\n  }\r\n\r\n  @action\r\n  public initGame() {\r\n    if (!this.isGameStarted) {\r\n      this.isGameStarted = true;\r\n    }\r\n  }\r\n\r\n  @action finishGame() {\r\n    if (this.isGameStarted) {\r\n      this.isGameStarted = false;\r\n    }\r\n  }\r\n\r\n  @action addMistake() {\r\n    this.countMistakes = this.countMistakes + 1;\r\n  }\r\n\r\n  @action resetGame() {\r\n    this.countMistakes = 0;\r\n    this.destinationItems = [5, 6, 7, 8, 9];\r\n    this.sourceItemsChanged = '';\r\n    this.destinationItemsChanged = '';\r\n    this.isGameStarted = false;\r\n    this.isGameCompleted = false;\r\n    this.sourceItems = shuffle([0, 1, 2, 3, 4]);\r\n  }\r\n}\r\n","export function shuffle(array: any[]) {\r\n  const arrayTemp = [...array];\r\n  let j, x, i;\r\n  for (i = arrayTemp.length - 1; i > 0; i--) {\r\n    j = Math.floor(Math.random() * (i + 1));\r\n    x = arrayTemp[i];\r\n    arrayTemp[i] = arrayTemp[j];\r\n    arrayTemp[j] = x;\r\n  }\r\n  return arrayTemp;\r\n}\r\n","import React from 'react';\r\nimport { GameStore } from './game.store';\r\nimport { UserStore } from './user.store';\r\n\r\nexport const store = {\r\n  User: new UserStore(),\r\n  Gamer: new GameStore(),\r\n};\r\n\r\nexport type StoreType = typeof store;\r\n\r\nexport const StoreContext = React.createContext({} as StoreType);\r\nexport const useStoreContext = () => React.useContext(StoreContext);\r\n","\r\nimport { observable, action } from 'mobx';\r\nexport class UserStore {\r\n  @observable public userName: string = '';\r\n  @observable private userLogged: boolean = false;\r\n\r\n  @action\r\n  public setName(name: string) {\r\n    if (name !== '') {\r\n      this.userLogged = true;\r\n      this.userName = name;\r\n    }\r\n  }\r\n\r\n  @action\r\n  public isUserLogged() {\r\n    return this.userLogged;\r\n  }\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { css } from \"@emotion/core\";\r\n\r\n/**\r\n *  Style Related Typings\r\n */\r\ntype CssSize = string | number; // e.g. 10px, 2em, 100%. Plain numbers are px\r\ntype Size = { width: CssSize; height: CssSize };\r\n\r\nexport interface IProps {\r\n  src: string;\r\n  size?: CssSize | Size;\r\n}\r\n\r\nconst iconSize = ({ size = \"1em\" }: IProps) =>\r\n  typeof size === \"object\"\r\n    ? size\r\n    : css({\r\n        height: size,\r\n        width: size,\r\n      });\r\n\r\nexport const Icon = styled.i<IProps>(\r\n  {\r\n    display: \"inline-block\",\r\n    backgroundPosition: \"center center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"contain\",\r\n    fontFamily: `'Roboto', --apple-system, blinkmacsystemfont, 'Segoe UI',\r\n    helvetica, aria, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',\r\n    'Segoe UI Symbol'`,\r\n    verticalAlign: \"middle\",\r\n  },\r\n  (props) => ({ backgroundImage: `url(${props.src})` }),\r\n  iconSize\r\n);\r\n","import { useState, useEffect } from 'react';\r\n\r\ntype TimerStatus = 'NOT_STARTED' | 'START_RUNNING' | 'RUNNING' | 'STOPPED' | 'PAUSE';\r\ninterface ITimer {\r\n  seconds: number;\r\n  status: TimerStatus;\r\n}\r\nconst useTimer = () => {\r\n  const [secondsTimer, setSecondsTimer] = useState<ITimer>({ seconds: 0, status: 'NOT_STARTED' });\r\n  const [timer, setTimer] = useState<NodeJS.Timeout>();\r\n  const { seconds } = secondsTimer;\r\n\r\n  useEffect(() => {\r\n    if (secondsTimer.status === 'START_RUNNING' || secondsTimer.status === 'PAUSE') {\r\n      initializeTimer();\r\n    }\r\n  }, [secondsTimer]);\r\n\r\n  const initializeTimer = () => {\r\n    setTimer(\r\n      setInterval(() => {\r\n        setSecondsTimer(prevState => ({ seconds: prevState.seconds + 1, status: 'RUNNING' }));\r\n      }, 1000),\r\n    );\r\n  };\r\n\r\n  const pauseTimer = () => {\r\n    if (secondsTimer.status === 'RUNNING') {\r\n      clearInterval(timer!);\r\n      setSecondsTimer(prevState => ({ ...prevState, ...{ status: 'PAUSE' } }));\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    clearInterval(timer!);\r\n    setSecondsTimer(prevState => ({ ...prevState, ...{ status: 'STOPPED' } }));\r\n  };\r\n\r\n  const addToTimer = () => {\r\n    pauseTimer();\r\n    setSecondsTimer(prevState => ({ seconds: prevState.seconds + 10, status: 'START_RUNNING' }));\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    clearInterval(timer!);\r\n    setSecondsTimer({ seconds: 0, status: 'NOT_STARTED' });\r\n  };\r\n\r\n  const startTimer = () => setSecondsTimer({ seconds: 0, status: 'START_RUNNING' });\r\n\r\n  useEffect(() => {\r\n    return () => pauseTimer();\r\n  }, []);\r\n\r\n  return { seconds, stopTimer, addToTimer, startTimer, resetTimer };\r\n};\r\n\r\nexport default useTimer;\r\n","import React from 'react';\r\nimport { useStoreContext } from 'store';\r\nimport { Icon } from 'app/components/Icon/Icon';\r\nimport { HeaderStyles } from './Header.theme';\r\nimport RegularClockSVG from 'assets/images/regular_clock.svg';\r\nimport useTimer from 'hooks/useTimer';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport const Header: React.FC = observer(() => {\r\n  const { User, Gamer } = useStoreContext();\r\n  const headerStyles = HeaderStyles();\r\n  const nameString = `Good luck, ${User.userName || 'Your name here'}!`;\r\n\r\n  // A custom hook to handle properly the timer.\r\n  const { seconds, stopTimer, addToTimer, startTimer, resetTimer } = useTimer();\r\n\r\n  React.useEffect(() => {\r\n    if (Gamer.isGameCompleted) {\r\n      console.log('here');\r\n      // Stop the timer when the user won the game\r\n      stopTimer();\r\n      // If the user won the game, reset after 10 seconds\r\n      setTimeout(() => {\r\n        resetTimer();\r\n        Gamer.resetGame();\r\n      }, 10000);\r\n    }\r\n  }, [Gamer.isGameCompleted]);\r\n\r\n  React.useEffect(() => {\r\n    // Start the time when the user click in any card\r\n    if (Gamer.isGameStarted) {\r\n      startTimer();\r\n    }\r\n  }, [Gamer.isGameStarted]);\r\n\r\n  React.useEffect(() => {\r\n    // Observe when the user commits an error in the final position,\r\n    if (Gamer.countMistakes > 0) {\r\n      addToTimer();\r\n    }\r\n  }, [Gamer.countMistakes]);\r\n\r\n  return (\r\n    <div css={headerStyles.headerContainer}>\r\n      <div css={headerStyles.nameContainer}>{nameString}</div>\r\n      <div css={headerStyles.headerRight}>\r\n        <div css={headerStyles.timerContainer}>\r\n          <Icon src={RegularClockSVG} css={headerStyles.iconStyle} />\r\n          <div>\r\n            Your Score: {seconds} second{seconds !== 1 ? 's' : ''}\r\n          </div>\r\n        </div>\r\n        <div css={headerStyles.gameStatus}>{Gamer.isGameCompleted ? 'Congrats, You won!' : ''}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import { css } from '@emotion/core';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const HeaderStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { primary },\r\n  } = theme;\r\n\r\n  return {\r\n    headerContainer: css`\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: start;\r\n      min-height: 60px;\r\n    `,\r\n    nameContainer: css`\r\n      color: ${primary.black};\r\n      font-weight: bold;\r\n    `,\r\n    timerContainer: css`\r\n      display: flex;\r\n      align-items: center;\r\n      color: ${primary.purple};\r\n      font-weight: bold;\r\n    `,\r\n    gameStatus: css`\r\n      display: flex;\r\n      color: ${primary.green};\r\n      justify-content: end;\r\n      font-weight: bold;\r\n    `,\r\n    iconStyle: css`\r\n      padding: 0 5px;\r\n    `,\r\n    headerRight: css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      jusity-content: space-between;\r\n    `,\r\n  };\r\n};\r\n","import LetterZSVG from 'assets/images/zoovu-z.svg';\r\nimport LetterOSVG from 'assets/images/zoovu-o.svg';\r\nimport LetterVSVG from 'assets/images/zoovu-v.svg';\r\nimport LetterUSVG from 'assets/images/zoovu-u.svg';\r\n\r\nconst MAX_NUMBER = 5;\r\n\r\nexport const getCardIcon = (keyCard: string) => {\r\n  switch (keyCard) {\r\n    case 'z':\r\n      return LetterZSVG;\r\n    case 'o':\r\n      return LetterOSVG;\r\n    case 'v':\r\n      return LetterVSVG;\r\n    case 'u':\r\n      return LetterUSVG;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const getValueCard = (value: Number) => {\r\n  switch (value) {\r\n    case 0:\r\n      return 'z';\r\n    case 1:\r\n      return 'o';\r\n    case 2:\r\n      return 'o';\r\n    case 3:\r\n      return 'v';\r\n    case 4:\r\n      return 'u';\r\n    default:\r\n      return 'x';\r\n  }\r\n};\r\n\r\nexport const draggableAreaEmpty = (value: Number) => value >= MAX_NUMBER || value < 0;\r\n","import React from 'react';\r\nimport { getCardIcon } from 'utils/cards';\r\nimport { Icon } from '../Icon/Icon';\r\nimport { CardGameStyles } from './CardGame.theme';\r\n\r\nexport interface ICardGameProps {\r\n  keyCard: string;\r\n}\r\n\r\nexport const CardGame: React.FC<ICardGameProps> = ({ keyCard }) => {\r\n  const letterIcon = getCardIcon(keyCard);\r\n  const cardGameStyles = CardGameStyles();\r\n  return (\r\n    <>\r\n      {letterIcon ? (\r\n        <div id={`card-id-${letterIcon}`} css={cardGameStyles.cardGameContainer}>\r\n          <Icon src={letterIcon} />\r\n        </div>\r\n      ) : (\r\n        <div id={`card-emtpy-id`} css={cardGameStyles.emptyCardGameContainer} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { css } from '@emotion/core';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const CardGameStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { secondary, primary },\r\n  } = theme;\r\n  return {\r\n    cardGameContainer: css`\r\n      display: flex;\r\n      justify-content: center;\r\n      border-radius: 10px;\r\n      background-color: ${secondary.white};\r\n      box-shadow: 3px 3px 3px 3px ${secondary['gray-2']}60;\r\n      & > i {\r\n        @media (min-width: 615px) {\r\n          height: 7rem;\r\n          width: 7rem;\r\n        }\r\n        height: 3rem;\r\n        width: 3rem;\r\n      }\r\n    `,\r\n    emptyCardGameContainer: css`\r\n      display: flex;\r\n      justify-content: center;\r\n      border-radius: 10px;\r\n      background-color: ${secondary['gray-2']};\r\n      border: 2px dashed ${primary.green};\r\n      height: 3rem;\r\n      width: 3rem;\r\n      @media (min-width: 615px) {\r\n        height: 7rem;\r\n        width: 7rem;\r\n      }\r\n    `,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { getValueCard, draggableAreaEmpty } from 'utils/cards';\r\nimport { CardGame } from 'app/components/CardGame/CardGame';\r\nimport { PickupAreaStyles } from './PickupArea.theme';\r\nimport { StoreContext } from 'store';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport const PickupArea: React.FC = observer(() => {\r\n  const pickupAreaStyles = PickupAreaStyles();\r\n  const { Gamer } = React.useContext(StoreContext);\r\n  const [sourceItems, setSourceItems] = React.useState<Number[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    setSourceItems(Gamer.sourceItems);\r\n  }, [Gamer.sourceItemsChanged, Gamer.sourceItems]);\r\n\r\n  return (\r\n    <>\r\n      <div css={pickupAreaStyles.pickupLabel}>\r\n        <div>Pick Up the right cards</div>\r\n        <div>The faster the better</div>\r\n      </div>\r\n      <div css={pickupAreaStyles.pickAreaContainer}>\r\n        {sourceItems.map((value, index) => (\r\n          <Droppable droppableId={`pickup-${value}`} isDropDisabled={true}>\r\n            {provided => (\r\n              <div ref={provided.innerRef} css={pickupAreaStyles.itemContainer(draggableAreaEmpty(value))}>\r\n                {getValueCard(value) !== 'x' ? (\r\n                  <Draggable key={index} draggableId={`pickup-item-${value}`} index={index}>\r\n                    {provided => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <CardGame keyCard={getValueCard(value)} />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ) : null}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n","import { css } from '@emotion/core';\r\nimport ImageZoovuPNG from 'assets/images/image_opacity.png';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const PickupAreaStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { primary, secondary },\r\n  } = theme;\r\n  return {\r\n    pickAreaContainer: css`\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      margin: 1.5rem 0;\r\n      @media (min-width: 615px) {\r\n        margin: 5rem 0;\r\n      }\r\n    `,\r\n    pickupLabel: css`\r\n      display: flex;\r\n      justify-content: space-between;\r\n      color: ${secondary['gray-1']};\r\n      margin: 1.5rem 0 0.75rem 0;\r\n      @media (min-width: 615px) {\r\n        margin: 2rem 0;\r\n      }\r\n    `,\r\n    itemContainer: (noItems: boolean) => css`\r\n      border-radius: 10px;\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n      background-image: url(${ImageZoovuPNG});\r\n      ${noItems ? `border: 2px dashed ${primary.green}` : ''};\r\n      height: 3rem;\r\n      width: 3rem;\r\n      @media (min-width: 615px) {\r\n        height: 7rem;\r\n        width: 7rem;\r\n      }\r\n    `,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { draggableAreaEmpty, getValueCard } from 'utils/cards';\r\nimport { CardGame } from 'app/components/CardGame/CardGame';\r\nimport { DroppableAreaStyles } from './DroppableArea.theme';\r\nimport { StoreContext } from 'store';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport const DroppableArea: React.FC = observer(() => {\r\n  const { Gamer } = React.useContext(StoreContext);\r\n  const droppableAreaStyles = DroppableAreaStyles();\r\n  const [destination, setDestination] = React.useState<Number[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    setDestination(Gamer.destinationItems);\r\n  }, [Gamer.destinationItemsChanged, Gamer.destinationItems]);\r\n\r\n  return (\r\n    <>\r\n      <div css={droppableAreaStyles.droppableLabel}>\r\n        <div>And drop them to make the logo great again</div>\r\n      </div>\r\n      <div css={droppableAreaStyles.droppableAreaContainer}>\r\n        {destination.map((value, index) => (\r\n          <Droppable droppableId={`droppable-${index}`} isDropDisabled={value === index}>\r\n            {provided => (\r\n              <div ref={provided.innerRef} css={droppableAreaStyles.itemContainer(draggableAreaEmpty(value))}>\r\n                {getValueCard(value) !== 'x' ? (\r\n                  <Draggable\r\n                    key={index}\r\n                    draggableId={`droppable-item-${index}`}\r\n                    index={index}\r\n                    isDragDisabled={Gamer.isGameCompleted}>\r\n                    {provided => (\r\n                      <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                        <CardGame keyCard={getValueCard(value)} />\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ) : null}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n","import { css } from '@emotion/core';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const DroppableAreaStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { primary, secondary },\r\n  } = theme;\r\n  return {\r\n    droppableAreaContainer: css`\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      margin: 1.5rem 0;\r\n      @media (min-width: 615px) {\r\n        margin: 5rem 0;\r\n      }\r\n    `,\r\n    droppableLabel: css`\r\n      display: flex;\r\n      justify-content: space-between;\r\n      color: ${secondary['gray-1']};\r\n      margin: 1.5rem 0 0.75rem 0;\r\n      @media (min-width: 615px) {\r\n        margin: 2rem 0;\r\n      }\r\n    `,\r\n    itemContainer: (noItems: boolean) => css`\r\n      display: flex;\r\n      justify-content: center;\r\n      border-radius: 10px;\r\n      background-color: ${secondary['gray-2']};\r\n      ${noItems ? `border: 2px dashed ${primary.green}` : ''};\r\n      height: 3rem;\r\n      width: 3rem;\r\n      @media (min-width: 615px) {\r\n        height: 7rem;\r\n        width: 7rem;\r\n      }\r\n    `,\r\n  };\r\n};\r\n","export const getComponentId = (term: string, text: string) => {\r\n  const pattern = new RegExp(term, 'g');\r\n  const [, itemId] = text.split(pattern);\r\n  return itemId ? +itemId : -1;\r\n};\r\n\r\nexport const isMoveFromDroppable = (source: string, destination: string) =>\r\n  source.includes('droppable') && destination.includes('droppable');\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { observer } from 'mobx-react';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { StoreContext } from 'store';\r\nimport { Header } from './Header/Header';\r\nimport { PickupArea } from './PickupArea/PickupArea';\r\nimport { DroppableArea } from './DroppableArea/DroppableArea';\r\nimport { getComponentId, isMoveFromDroppable } from 'utils/dragdrop';\r\nimport { getValueCard } from 'utils/cards';\r\n\r\nconst Game = withRouter(\r\n  observer(() => {\r\n    const { Gamer } = React.useContext(StoreContext);\r\n    React.useEffect(() => {\r\n      Gamer.resetGame();\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n      // Verify every action if the destination has been changed\r\n      Gamer.verifyGame();\r\n    }, [Gamer.destinationItemsChanged]);\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n      const { source, destination, draggableId } = result;\r\n\r\n      // dropped outside\r\n      if (!destination) {\r\n        return;\r\n      }\r\n      const droppableIdNumber = getComponentId('pickup-item-', draggableId);\r\n      const destinationIdNumber = getComponentId('droppable-', destination.droppableId);\r\n      const sourceIdNumber = getComponentId('droppable-', source.droppableId);\r\n\r\n      if (isMoveFromDroppable(source.droppableId, destination.droppableId)) {\r\n        Gamer.changeDroppableItem(sourceIdNumber, destinationIdNumber);\r\n      } else {\r\n        Gamer.matchedItems(destinationIdNumber, source.index);\r\n        if (getValueCard(droppableIdNumber) !== getValueCard(destinationIdNumber)) {\r\n          Gamer.addMistake();\r\n        }\r\n      }\r\n      return;\r\n    };\r\n\r\n    const onDragStart = () => {\r\n      Gamer.initGame();\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Header />\r\n        <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\r\n          <PickupArea />\r\n          <DroppableArea />\r\n        </DragDropContext>\r\n      </>\r\n    );\r\n  }),\r\n);\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport { ButtonStyles } from './Button.theme';\r\n\r\nexport interface IButtonProps {\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Button: React.FC<IButtonProps> = ({ onClick, children }) => {\r\n  const buttonStyles = ButtonStyles();\r\n  return (\r\n    <div css={buttonStyles.ButtonContainer} onClick={onClick}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { css } from '@emotion/core';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const ButtonStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { secondary },\r\n  } = theme;\r\n  return {\r\n    ButtonContainer: css`\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      min-height: 2.5rem;\r\n      min-width: 7.5rem;\r\n      border: 0.125rem solid ${secondary['gray-2']};\r\n      border-radius: 2.5rem;\r\n      cursor: pointer;\r\n      box-shadow: 2px 2px 2px 2px ${secondary['gray-2']}60;\r\n      opacity: 70;\r\n    `,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { InputStyles } from './Input.theme';\r\n\r\ninterface IInput {\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder: string;\r\n}\r\n// display: inline-block;\r\nexport const Input: React.FC<IInput> = ({ placeholder, onChange }) => {\r\n  const inputStyles = InputStyles();\r\n  return (\r\n    <div css={inputStyles.inputWrapper}>\r\n      <input css={inputStyles.inputContainer} placeholder={placeholder} onChange={onChange} maxLength={15} />\r\n    </div>\r\n  );\r\n};\r\n","import { css } from '@emotion/core';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const InputStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { secondary },\r\n  } = theme;\r\n\r\n  return {\r\n    inputContainer: css`\r\n      display: inline-block;\r\n      outline: none;\r\n      border: none;\r\n      font-size: 16px;\r\n      text-align: center;\r\n      font-style: italic;\r\n      background-color: transparent;\r\n      \r\n      @media (min-width: 615px) {\r\n        width: 300px;\r\n      }\r\n\r\n      &::placeholder {\r\n        color: ${secondary['gray-1']};\r\n      }\r\n    `,\r\n    inputWrapper: css`\r\n      border-bottom: 2px solid ${secondary['gray-2']};\r\n      padding: 10px 0;\r\n    `,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'app/components/Button/Button';\r\nimport { Input } from 'app/components/Input/Input';\r\nimport { ButtonGameStyles, WelcomeStyles } from './Welcome.theme';\r\nimport { Icon } from 'app/components/Icon/Icon';\r\nimport ArrowRightSVG from 'assets/images/arrow-right.svg';\r\nimport { useStoreContext } from 'store';\r\nimport { ROUTES_URLS } from 'app/routes/Routes';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst ContentButtonGo = () => {\r\n  const buttonGameStyles = ButtonGameStyles();\r\n  return (\r\n    <div css={buttonGameStyles.containerButton}>\r\n      <div css={buttonGameStyles.contentButton}>Let's Go</div>\r\n      <Icon src={ArrowRightSVG} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Welcome = withRouter(({ history }) => {\r\n  const welcomeStyles = WelcomeStyles();\r\n  const { User } = useStoreContext();\r\n  const placeholder = 'Your name here';\r\n  const [nameValue, setNameValue] = React.useState('');\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNameValue(value);\r\n  };\r\n\r\n  const goGameView = () => {\r\n    User.setName(nameValue);\r\n    history.push({ pathname: ROUTES_URLS.GAME_PATH });\r\n  };\r\n\r\n  return (\r\n    <div css={welcomeStyles.welcomeContainer}>\r\n      <div css={welcomeStyles.welcomeTitle}>Hello friend, tell me your name...</div>\r\n      <div>\r\n        <Input placeholder={placeholder} onChange={handleChange} />\r\n      </div>\r\n      <div>\r\n        <Button onClick={goGameView}>\r\n          <ContentButtonGo />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Welcome;\r\n","import { css } from '@emotion/core';\r\nimport { useTheme } from 'emotion-theming';\r\n\r\nexport const WelcomeStyles = () => {\r\n  return {\r\n    welcomeContainer: css`\r\n      display: flex;\r\n      flex: 1;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      & > div {\r\n        padding: 15px 0;\r\n      }\r\n    `,\r\n    welcomeTitle: css`\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    `,\r\n  };\r\n};\r\n\r\nexport const ButtonGameStyles = () => {\r\n  const theme: ITheme = useTheme();\r\n  const {\r\n    colors: { primary },\r\n  } = theme;\r\n\r\n  return {\r\n    containerButton: css`\r\n      display: flex;\r\n      flex: 1;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n      margin: 0 10px;\r\n    `,\r\n    contentButton: css`\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      color: ${primary.purple};\r\n      font-weight: bold;\r\n    `,\r\n  };\r\n};\r\n","import * as React from 'react';\r\nimport Game from 'app/views/game/Game';\r\nimport Welcome from 'app/views/welcome/Welcome';\r\nimport { HashRouter, Redirect, Route, RouteComponentProps, Switch } from 'react-router-dom';\r\nimport { useStoreContext } from 'store';\r\n\r\nexport const ROUTES_URLS = {\r\n  WELCOME_PATH: '/',\r\n  GAME_PATH: '/game',\r\n};\r\n\r\nexport const routes: IAppRoute[] = [\r\n  {\r\n    component: Welcome,\r\n    isProtected: false,\r\n    path: ROUTES_URLS.WELCOME_PATH,\r\n    slug: 'WELCOME_SCREEN',\r\n    title: 'Welcome',\r\n  },\r\n  {\r\n    component: Game,\r\n    isProtected: true,\r\n    path: ROUTES_URLS.GAME_PATH,\r\n    slug: 'GAME_SCREEN',\r\n    title: 'Game',\r\n  },\r\n];\r\n\r\ninterface IProtectedRoute {\r\n  Component: React.FC<RouteComponentProps>;\r\n  path: string | string[];\r\n  exact?: boolean;\r\n}\r\n\r\nconst ProtectedRoute: React.FC<IProtectedRoute> = ({ Component, path, exact = false }) => {\r\n  const { User } = useStoreContext();\r\n  const isAuthorized = User.isUserLogged();\r\n  const message = 'Routing to Welcome Screen';\r\n  return (\r\n    <Route\r\n      exact={exact}\r\n      path={path}\r\n      render={(props: RouteComponentProps) => {\r\n        return isAuthorized ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: ROUTES_URLS.WELCOME_PATH,\r\n              state: {\r\n                message,\r\n                requestedPath: path,\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const AppRouter: React.FC = () => (\r\n  <HashRouter basename=\"/\">\r\n    <Switch>\r\n      {routes.map((route: IAppRoute) => {\r\n        return route.isProtected ? (\r\n          <ProtectedRoute key={route.slug} exact path={route.path} Component={route.component} />\r\n        ) : (\r\n          <Route key={route.slug} exact path={route.path} component={route.component} />\r\n        );\r\n      })}\r\n      <Redirect to={ROUTES_URLS.WELCOME_PATH} />\r\n    </Switch>\r\n  </HashRouter>\r\n);\r\n","import { css } from '@emotion/core';\r\nimport BackgroundJPG from 'assets/images/background.jpg';\r\n\r\nexport const LayoutStyles = {\r\n  layoutContainer: css`\r\n    display: flex;\r\n    flex: 1;\r\n    flex-direction: column;\r\n    @media (min-width: 615px) {\r\n      padding: 5rem;\r\n    }\r\n    padding: 1rem;\r\n    background-image: url(${BackgroundJPG});\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport { LayoutStyles } from './Layout.theme';\r\n\r\nconst Layout: React.FC = ({ children }: React.PropsWithChildren<{}>) => {\r\n  return <div css={LayoutStyles.layoutContainer}>{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport { ThemeProvider } from 'emotion-theming';\nimport { theme } from 'styles/theme';\nimport { store, StoreContext } from 'store';\nimport { AppRouter } from 'app/routes/Routes';\nimport { Provider } from 'mobx-react';\nimport Layout from 'app/components/Layout/Layout';\n\nconst AppWrapper = styled.div<{}>({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  height: '100%',\n});\n\nconst App = () => (\n  <StoreContext.Provider value={store}>\n    <Provider {...store}>\n      <ThemeProvider theme={theme}>\n        <AppWrapper>\n          <Router>\n            <Layout>\n              <AppRouter />\n            </Layout>\n          </Router>\n        </AppWrapper>\n      </ThemeProvider>\n    </Provider>\n  </StoreContext.Provider>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}